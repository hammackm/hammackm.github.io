{"version":3,"sources":["components/Intro.js","components/Body.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","cardcontent","paddingBottom","&:last-child","boxShadow","minHeight","backgroundColor","margin","spacing","textAlign","card","contactCard","divider","introHello","fontSize","introIntroduction","linkText","color","fontFamily","vertBorder","borderRight","padding","table","tableCell","tableRow","Intro","classes","react_default","a","createElement","Grid","container","item","xs","Card","className","CardContent","Typography","gutterBottom","style","opacity","fontWeight","Table","size","TableBody","TableRow","TableCell","align","href","SvgIcon","fill","d","Divider","createRow","Box","bgcolor","m","border","width","height","language","arguments","length","undefined","framework","technology","other","skillRows","containerBody","labelCard","bodyLabelText","textDivider","skillsTable","skillsCard","skillsTableHead","experienceCompanyNameCell","minWidth","experienceHeaderInfoCell","aboutMeText","Body","onMouseEnter","console","log","onMouseLeave","TableHead","map","row","index","key","App","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9be6f903.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport {TableBody} from \"@material-ui/core\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    cardcontent: {\r\n        paddingBottom: 4,\r\n        \"&:last-child\": {\r\n            paddingBottom: 4\r\n        },\r\n        boxShadow: \"none\",\r\n        minHeight: 156,\r\n        backgroundColor: \"#E8F1F2\",\r\n        margin: theme.spacing(2,4,0,4),\r\n        textAlign: \"left\",\r\n    },\r\n    card: {\r\n        boxShadow: \"none\",\r\n        minHeight: 156,\r\n        backgroundColor: \"#E8F1F2\",\r\n        margin: theme.spacing(2,4,0,4),\r\n        textAlign: \"left\",\r\n    },\r\n    contactCard: {\r\n        paddingBottom: 4,\r\n        \"&:last-child\": {\r\n            paddingBottom: 4\r\n        },\r\n        boxShadow: \"none\",\r\n        minHeight: 156,\r\n        backgroundColor: \"#E8F1F2\",\r\n        margin: theme.spacing(2,4,0,4),\r\n        textAlign: \"left\",\r\n\r\n    },\r\n    divider: {\r\n        margin: theme.spacing(3, 4),\r\n    },\r\n    introHello: {\r\n        fontSize: 28,\r\n\r\n    },\r\n    introIntroduction: {\r\n        fontSize: 19,\r\n\r\n    },\r\n    linkText: {\r\n        fontSize: 22,\r\n        color: \"#050505\",\r\n        fontFamily: \"Berlin Sans FB\"\r\n    },\r\n    vertBorder: {\r\n        borderRight: '0.1em solid black',\r\n        padding: '0.5em',\r\n    },\r\n    table: {\r\n\r\n    },\r\n    tableCell: {\r\n        padding: theme.spacing(0,1,0,1),\r\n    },\r\n    tableRow: {\r\n        padding: theme.spacing(0,1,0,0)\r\n    }\r\n}));\r\n\r\n\r\nexport default function Intro() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={0}>\r\n\r\n                <Grid item xs={10}>\r\n                    <Card className={classes.card}>\r\n                        <CardContent>\r\n                            <Typography className={classes.introHello} gutterBottom>\r\n                                —Hello!\r\n                            </Typography>\r\n                            <Typography className={classes.introIntroduction} gutterBottom>\r\n                                <span style={{opacity: 0.25}}>&lt;p&gt;</span>My name is <span style={{color: \"#1C2541\", fontWeight: 'bold'}}>Mitchell Hammack</span> and I am currently a CS student at the University of Florida. I have a passion for combining machine learning and web apps.\r\n                                I am currently seeking an internship for the summer of 2020.<span style={{opacity: 0.25}}>&lt;/p&gt;</span>\r\n                            </Typography>\r\n                            <Typography>For a quicker snapshot at my skills, experience, etc. Take a look at my <u>resume</u>.</Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Card className={classes.cardcontent}>\r\n                        <CardContent className={classes.tableCell}>\r\n                            <Table  className={classes.table} size={\"small\"}>\r\n                                <TableBody>\r\n                                    <TableRow className={classes.tableRow}>\r\n                                        <TableCell align={\"right\"} className={classes.tableCell}><a href={\"https://www.linkedin.com/in/hammackm/\"} className={classes.linkText}>LinkedIn</a></TableCell>\r\n                                            <TableCell align={\"left\"} className={classes.tableCell}>\r\n                                                <a href={\"https://www.linkedin.com/in/hammackm/\"}>\r\n                                                <SvgIcon>\r\n                                                    <path fill=\"#247BA0\" d={\"M19,3A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3H19M18.5,18.5V13.2A3.26,3.26 0 0,0 15.24,9.94C14.39,9.94 13.4,10.46 12.92,11.24V10.13H10.13V18.5H12.92V13.57C12.92,12.8 13.54,12.17 14.31,12.17A1.4,1.4 0 0,1 15.71,13.57V18.5H18.5M6.88,8.56A1.68,1.68 0 0,0 8.56,6.88C8.56,5.95 7.81,5.19 6.88,5.19A1.69,1.69 0 0,0 5.19,6.88C5.19,7.81 5.95,8.56 6.88,8.56M8.27,18.5V10.13H5.5V18.5H8.27Z\"}/>\r\n                                                </SvgIcon>\r\n                                                </a>\r\n                                            </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                            <TableCell align={\"right\"} className={classes.tableCell}><a href={\"https://github.com/hammackm\"} className={classes.linkText}>GitHub</a></TableCell>\r\n                                            <TableCell align={\"left\"} className={classes.tableCell}>\r\n                                                <a href={\"https://github.com/hammackm\"}>\r\n                                                <SvgIcon>\r\n                                                    <path fill=\"#000000\" d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\" />\r\n                                                </SvgIcon>\r\n                                                </a>\r\n                                            </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align={\"right\"} className={classes.tableCell}><a href={\"https://www.kaggle.com/hammackm1\"} className={classes.linkText}>Kaggle</a></TableCell>\r\n                                        <TableCell align={\"left\"} className={classes.tableCell}>\r\n                                            <a href={\"https://www.kaggle.com/hammackm1\"}>\r\n                                            <SvgIcon>\r\n                                                <path fill=\"#4B93B1\" d=\"M18.825 23.859c-.022.092-.117.141-.281.141h-3.139c-.187 0-.351-.082-.492-.248l-5.178-6.589-1.448 1.374v5.111c0 .235-.117.352-.351.352H5.505c-.236 0-.354-.117-.354-.352V.353c0-.233.118-.353.354-.353h2.431c.234 0 .351.12.351.353v14.343l6.203-6.272c.165-.165.33-.246.495-.246h3.239c.144 0 .236.06.285.18.046.149.034.255-.036.315l-6.555 6.344 6.836 8.507c.095.104.117.208.07.358\" />\r\n                                            </SvgIcon>\r\n                                            </a>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align={\"right\"} className={classes.tableCell}><a href={\"mailto:hammackm1@gmail.com\"} className={classes.linkText}>Email</a></TableCell>\r\n                                        <TableCell align={\"left\"} className={classes.tableCell}>\r\n                                            <a href={\"mailto:hammackm1@gmail.com\"}>\r\n                                            <SvgIcon>\r\n                                                <path fill=\"#000000\" d=\"M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z\" />\r\n                                            </SvgIcon>\r\n                                            </a>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                            Hammackm1@gmail.com\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider className={classes.divider} />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\nimport { borders } from '@material-ui/system';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {TableBody} from \"@material-ui/core\";\r\n\r\nconst inner = (\r\n    <Box bgcolor=\"background.paper\" m={1} border={1} style={{ width: '5rem', height: '5rem' }}>hello</Box>\r\n);\r\n\r\nconst createRow = (language=\"\", framework=\"\", technology=\"\", other=\"\") => {\r\n    return {language, framework, technology, other}\r\n};\r\n\r\nconst skillRows = [\r\n    createRow(\"Python\", \"TensorFlow\", \"Docker\", \"Amazon Web Service\"),\r\n    createRow(\"Java\", \"Keras\", \"Kubernetes\", \"Google Cloud Platform\"),\r\n    createRow(\"C++\", \"Spring Boot\", \"Git\"),\r\n    createRow(\"JavaScript\", \"ReactJS\", \"MongoDB\"),\r\n    createRow(\"SQL\", \"SciPy\"),\r\n    createRow(\"HTML/CSS\", \"Pandas\"),\r\n]\r\n\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    containerBody: {\r\n    },\r\n    card: {\r\n        boxShadow: \"none\",\r\n        backgroundColor: \"#EADFE4\",\r\n        margin: theme.spacing(0,4,0,4),\r\n        textAlign: \"left\",\r\n        border: 1,\r\n        m: 1,\r\n    },\r\n    labelCard: {\r\n        textAlign: \"center\",\r\n        boxShadow: \"none\",\r\n        backgroundColor: \"#EADFE4\",\r\n        margin: theme.spacing(0,4,0,4),\r\n    },\r\n    divider: {\r\n        margin: theme.spacing(3, 4),\r\n    },\r\n    bodyLabelText: {\r\n        fontSize: 20,\r\n        color: \"#000\"\r\n    },\r\n    textDivider: {\r\n        opacity: 0.25,\r\n        padding: theme.spacing(2,0)\r\n    },\r\n    skillsTable: {\r\n\r\n    },\r\n    skillsCard: {\r\n        boxShadow: \"none\",\r\n        backgroundColor: \"#EADFE4\",\r\n        margin: theme.spacing(0,4,0,4),\r\n\r\n    },\r\n    skillsTableHead: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n    experienceCompanyNameCell: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        minWidth: 225,\r\n    },\r\n    experienceHeaderInfoCell: {\r\n        fontWeight: 'bold',\r\n        minWidth: 100,\r\n    },\r\n    aboutMeText: {\r\n        fontSize: 20,\r\n    }\r\n}));\r\n\r\n\r\nexport default function Body() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={0} className={classes.containerBody}>\r\n                <Grid item xs={3}>\r\n                    <Card className={classes.labelCard}>\r\n                        <CardContent>\r\n                            <Typography className={classes.bodyLabelText}><span style={{color: \"#EE6352\", opacity: 0.25}}>const</span> <span style={{color: \"#54417C\", fontWeight: \"bold\", fontSize: 22}}>ABOUT_ME</span><span style={{opacity: 0.25}}> = (mitchell_info) => {'{'}</span></Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={9}>\r\n\r\n                    <Card className={classes.card}>\r\n                        <div onMouseEnter={console.log(\"enter\")} onMouseLeave={console.log(\"leave\")}>\r\n                        <CardContent>\r\n                            <Typography className={classes.aboutMeText}>When I'm not studying or working on personal projects, you can find me in the gym or practing piano and <a href={\"https://arts.ufl.edu/sites/carillon-studio/welcome/\"}>carillon</a>.</Typography>\r\n                        </CardContent>\r\n                        </div>\r\n                    </Card>\r\n\r\n                </Grid>\r\n            </Grid>\r\n            <Divider className={classes.divider}></Divider>\r\n            <Grid container spacing={0} className={classes.containerBody}>\r\n                <Grid item xs={3}>\r\n                    <Card className={classes.labelCard}>\r\n                        <CardContent>\r\n                            <Typography className={classes.bodyLabelText}><span style={{color: \"#EE6352\", opacity: 0.25}}>const</span> <span style={{color: \"#54417C\", fontWeight: \"bold\", fontSize: 22}}>EXPERIENCE</span><span style={{opacity: 0.25}}> = (work_experience) => {'{'}</span></Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={9}>\r\n                    <Card className={classes.card}>\r\n                        <CardContent>\r\n                            <Table size={\"small\"}>\r\n                                <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.experienceCompanyNameCell}>J.P. Morgan</TableCell>\r\n                                    <TableCell className={classes.experienceHeaderInfoCell}>Software Engineer Intern</TableCell>\r\n                                    <TableCell className={classes.experienceHeaderInfoCell}>July 2019 - August 2019</TableCell>\r\n                                </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Typography><u>Tasks:</u></Typography>\r\n                            <Typography>—Create a full-stack web app that automatically extracts text data from legal and financial documents</Typography>\r\n                            <Typography>—Create a machine learning service to be used by the consumer bank</Typography>\r\n                            <Typography><u>Challenges Faced:</u></Typography>\r\n                            <Typography>—Creating a product on a tight schedule while learning all of the new technologies that were used</Typography>\r\n                            <Typography><u>What I Used and Learned:</u></Typography>\r\n                            <Typography>—Docker</Typography>\r\n                            <Typography>—Kubernetes</Typography>\r\n                            <Typography>—ReactJS</Typography>\r\n                            <Typography>—Spring Boot</Typography>\r\n                            <Typography>—Agile Development</Typography>\r\n                            <Divider className={classes.divider}></Divider>\r\n                            <Table size={\"small\"}>\r\n                                <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.experienceCompanyNameCell}>Lockheed Martin</TableCell>\r\n                                    <TableCell className={classes.experienceHeaderInfoCell}>Software Engineer Intern</TableCell>\r\n                                    <TableCell className={classes.experienceHeaderInfoCell}>July 2018 - August 2018</TableCell>\r\n                                </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Typography><u>Tasks:</u></Typography>\r\n                            <Typography>—Create vulnerability scanning scripts to be used by ACAS in PowerShell and XML</Typography>\r\n                            <Typography>—Design informational web pages for different engineering teams</Typography>\r\n                            <Typography>—Implement a database for noncompliant media devices</Typography>\r\n                            <Typography>—Perform vulnerability scans on a variety of workstations</Typography>\r\n                            <Typography><u>Challenges Faced:</u></Typography>\r\n                            <Typography>—Learning how to communicate effectively in a large team</Typography>\r\n                            <Typography><u>What I Used and Learned:</u></Typography>\r\n                            <Typography>—PowerShell, ACAS, and XML</Typography>\r\n                            <Typography>—The importance of secure coding and vulnerability testing</Typography>\r\n                            <Typography>—Database design</Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider className={classes.divider}></Divider>\r\n            <Grid container spacing={0} className={classes.containerBody}>\r\n                <Grid item xs={3}>\r\n                    <Card className={classes.labelCard}>\r\n                        <CardContent>\r\n                            <Typography className={classes.bodyLabelText}><span style={{color: \"#EE6352\", opacity: 0.25}}>const</span> <span style={{color: \"#54417C\", fontWeight: \"bold\", fontSize: 22}}>PROJECTS</span><span style={{opacity: 0.25}}> = (mitchell_projects) => {'{'}</span></Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                    <Card className={classes.card}>\r\n                        <CardContent>\r\n                            <Table size={\"small\"}>\r\n                                <TableBody>\r\n                            <TableRow>\r\n                                <TableCell className={classes.experienceCompanyNameCell}>ASL Interpreter</TableCell>\r\n                                <TableCell align={\"left\"} className={classes.tableCell}>\r\n                                    <a href={\"https://github.com/hammackm\"}>\r\n                                        <SvgIcon>\r\n                                            <path fill=\"#000000\" d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\" />\r\n                                        </SvgIcon>\r\n                                    </a>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                                </TableBody>\r\n                        </Table>\r\n                            <Typography><u>Problem:</u></Typography>\r\n                            <Typography>—ASL-using deaf persons cannot effectively communicate with hearing individuals who do not know ASL without an interpreter</Typography>\r\n                            <Typography>—This creates a communication barrier between the two groups</Typography>\r\n                            <Typography><u>Solution:</u></Typography>\r\n                            <Typography>—Create a service that a be used in place of a human interpreter</Typography>\r\n                            <Typography><u>Challenges Faced:</u></Typography>\r\n                            <Typography>—Connecting all endpoints into the front-end</Typography>\r\n                            <Typography><u>What I Used and Learned:</u></Typography>\r\n                            <Typography>—Keras</Typography>\r\n                            <Typography>—Flask</Typography>\r\n                            <Typography>—ReactJS</Typography>\r\n                            <Divider className={classes.divider}></Divider>\r\n                            <Table size={\"small\"}>\r\n                                <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.experienceCompanyNameCell}>Melanoma Skin Cancer Detection</TableCell>\r\n                                    <TableCell className={classes.experienceHeaderInfoCell}>July 2015 - March 2017</TableCell>\r\n                                    <TableCell align={\"left\"} className={classes.tableCell}>\r\n                                        <a href={\"https://github.com/hammackm\"}>\r\n                                            <SvgIcon>\r\n                                                <path fill=\"#000000\" d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\" />\r\n                                            </SvgIcon>\r\n                                        </a>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Typography><u>Problem:</u></Typography>\r\n                            <Typography>—Melanoma skin cancer is #leading cause of death?#</Typography>\r\n                            <Typography>—Early diagnosis of melanoma is crucial for effective treatment and good prognosis</Typography>\r\n                            <Typography><u>Solution:</u></Typography>\r\n                            <Typography>—Create an app that allows users to upload an image of a skin lesion to determine if the image contains a melanoma skin lesion</Typography>\r\n                            <Typography>—Not intended to replace a physician or biopsy but rather as a simple test that can be done at home</Typography>\r\n                            <Typography><u>Challenges Faced:</u></Typography>\r\n                            <Typography>—Limited dataset of ~360 images</Typography>\r\n                            <Typography><u>What I Used and Learned:</u></Typography>\r\n                            <Typography>—Python</Typography>\r\n                            <Typography>—Keras</Typography>\r\n                            <Divider className={classes.divider}></Divider>\r\n                            <Table size={\"small\"}>\r\n                                <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.experienceCompanyNameCell}>Danger.ai</TableCell>\r\n                                    <TableCell className={classes.experienceHeaderInfoCell}>January 2019</TableCell>\r\n                                    <TableCell align={\"left\"} className={classes.tableCell}>\r\n                                        <a href={\"https://github.com/isaiahnields/danger.ai\"}>\r\n                                            <SvgIcon>\r\n                                                <path fill=\"#000000\" d=\"M12,2A10,10 0 0,0 2,12C2,16.42 4.87,20.17 8.84,21.5C9.34,21.58 9.5,21.27 9.5,21C9.5,20.77 9.5,20.14 9.5,19.31C6.73,19.91 6.14,17.97 6.14,17.97C5.68,16.81 5.03,16.5 5.03,16.5C4.12,15.88 5.1,15.9 5.1,15.9C6.1,15.97 6.63,16.93 6.63,16.93C7.5,18.45 8.97,18 9.54,17.76C9.63,17.11 9.89,16.67 10.17,16.42C7.95,16.17 5.62,15.31 5.62,11.5C5.62,10.39 6,9.5 6.65,8.79C6.55,8.54 6.2,7.5 6.75,6.15C6.75,6.15 7.59,5.88 9.5,7.17C10.29,6.95 11.15,6.84 12,6.84C12.85,6.84 13.71,6.95 14.5,7.17C16.41,5.88 17.25,6.15 17.25,6.15C17.8,7.5 17.45,8.54 17.35,8.79C18,9.5 18.38,10.39 18.38,11.5C18.38,15.32 16.04,16.16 13.81,16.41C14.17,16.72 14.5,17.33 14.5,18.26C14.5,19.6 14.5,20.68 14.5,21C14.5,21.27 14.66,21.59 15.17,21.5C19.14,20.16 22,16.42 22,12A10,10 0 0,0 12,2Z\" />\r\n                                            </SvgIcon>\r\n                                        </a>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Typography><u>Problem:</u></Typography>\r\n                            <Typography>—Video surveillance is a task that requires a constant human presence to monitor all video feeds</Typography>\r\n                            <Typography><u>Solution:</u></Typography>\r\n                            <Typography>—Create an web app and machine learning ensemble pipeline to continuously monitor video surveillance for dangerous activity</Typography>\r\n                            <Typography><u>Challenges Faced:</u></Typography>\r\n                            <Typography>—Bringing together all parts of the software </Typography>\r\n                            <Typography><u>What I Used and Learned:</u></Typography>\r\n                            <Typography>—Google Cloud Platform</Typography>\r\n                            <Typography>—Ensemble Machine Learning</Typography>\r\n                            <Typography>—OpenPose</Typography>\r\n                            <Typography>—WordToVec</Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider className={classes.divider}></Divider>\r\n            <Grid container spacing={0} className={classes.containerBody}>\r\n                <Grid item xs={3}>\r\n                    <Card className={classes.labelCard}>\r\n                        <CardContent>\r\n                            <Typography className={classes.bodyLabelText}><span style={{color: \"#EE6352\", opacity: 0.25}}>const</span> <span style={{color: \"#54417C\", fontWeight: \"bold\", fontSize: 22}}>SKILLS</span><span style={{opacity: 0.25}}> = (mitchell_skills) => {'{'}</span></Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                    <Card className={classes.skillsCard}>\r\n                        <CardContent>\r\n                            <Table className={classes.skillsTable} size={\"small\"}>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell className={classes.skillsTableHead}>Languages</TableCell>\r\n                                        <TableCell className={classes.skillsTableHead}>Libraries and Frameworks</TableCell>\r\n                                        <TableCell className={classes.skillsTableHead}>Tools and Technologies</TableCell>\r\n                                        <TableCell className={classes.skillsTableHead}>Other</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {skillRows.map((row, index) => (\r\n                                        <TableRow key={index}>\r\n                                            <TableCell key={row.language}>{row.language}</TableCell>\r\n                                            <TableCell key={row.framework}>{row.framework}</TableCell>\r\n                                            <TableCell key={row.technology}>{row.technology}</TableCell>\r\n                                            <TableCell key={row.other}>{row.other}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider className={classes.divider}></Divider>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\nimport './App.css';\n\nimport Intro from './components/Intro';\nimport Body from \"./components/Body\";\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n          <Intro/>\n          <Body/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}